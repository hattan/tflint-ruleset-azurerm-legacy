# This is a basic workflow that is manually triggered

name: vm_size

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    # inputs: None?

jobs:
  vm_size:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Calculate diff
      run: |
        echo "Getting file from storage..."
        curl https://tflintrulesstore.z5.web.core.windows.net/vm-size.json --output rules/.tflint-azure-config/vm-size.json
        echo "Done."
        echo "Calculating diff..."
        git diff > vmsize_snapshot.diff
        echo "Done."
    - name: Check that json file is accessible
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs')
          const data = fs.readFileSync('rules/.tflint-azure-config/vm-size.json', 'utf-8')
          console.log("Contents of vm-size.json:diff.")
          console.log(data)
    - name: Regenerate Go code and create PR
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const fs = require('fs')
          const data = fs.readFileSync('vmsize_snapshot.diff', 'utf-8')
          if (data === "") {
            console.log("No diff.")
            return
          }
          else {
            console.log("Diff exists.")

            // Possibly: Need to create and check out new branch for changes?
            octokit.git.createRef({
              owner: 'terraform-linters',
              repo: 'tflint-ruleset-azurerm',
              ref: "refs/heads/vm-size-update",
              sha: ?,
            });

            // Regenerate go code file
            var goCodeFilePath = "azure_vm_size_list.go";

            // Write headers and static code at top of go code file
            fs.writeFile(goCodeFilePath, 'package rules\n\nvar azureVmSizeList = []string{\n', function(err) {
                if (err) {
                    return console.error(err);
                }
                console.log("File header written successfully.");

                // Get data from vm-size.json file
                const jsonFileData = fs.readFileSync('vm-size.json', 'utf-8');
                var dataArray = JSON.parse(jsonFileData);

                // Create list of vm size elements to write out to file
                var vmSizeString = "";
                for (i in dataArray) {
                    vmSizeString += ("    \"" + dataArray[i] + "\",\n");
                }
                console.log("vmSizeString:");
                console.log(vmSizeString);

                // Write vm size data to go code file
                fs.appendFile(goCodeFilePath, vmSizeString, function(err) {
                    if (err) {
                        return console.error(err);
                    }
                    console.log("VM size data written successfully.");

                    // Write end of go code file
                    fs.appendFile(goCodeFilePath, '}', function (err) {
                        if (err) {
                            return console.error(err);
                        }
                        console.log("End of file written successfully.");
                    });
                })
            });

            // Create PR
            github.pulls.create({
              owner: 'terraform-linters',
              repo: 'tflint-ruleset-azurerm',
              title: "Update Azure VM Sizes List",
              head: "refs/heads/vm-size-update",
              base: "master"
            });

            return
          }
